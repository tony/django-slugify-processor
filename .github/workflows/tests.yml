name: tests

on: [push, pull_request]

jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.x']
        django-version: ['4.2', '5.1']
        include:
          - python-version: '3.8'
            django-version: '4.2'
          - python-version: '3.9'
            django-version: '4.2'
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install "poetry==1.8.4"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: |
          poetry install --with=docs,test,coverage,lint
          poetry run pip install DJANGO~=${{ matrix.django-version }}

      - name: Install django-extensions @ version, if exists
        if: ${{ matrix.django-extensions != '' }}
        run: poetry run pip install 'django-extensions${{ matrix.django-extensions }}'

      - name: Print python versions
        run: |
          python -V
          poetry run python -V

      - name: Lint with ruff check
        run: poetry run ruff check .

      - name: Format with ruff format
        run: poetry run ruff format . --check

      - name: Lint with mypy
        run: poetry run mypy .

      - name: Test with pytest
        run: poetry run py.test --cov=./ --cov-report=xml

      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    strategy:
      matrix:
        python-version: ['3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install "poetry==1.8.4"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Build package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: poetry build

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
