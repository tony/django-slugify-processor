[tool.poetry]
name = "django-slugify-processor"
version = "0.11.0"
description = "pipeline for slugification edgecases in django"

classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Environment :: Web Environment',
  'Framework :: Django',
  'Framework :: Django :: 2.2',
  'Framework :: Django :: 3.1',
  'Framework :: Django :: 3.2',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Operating System :: OS Independent',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.6',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python :: Implementation :: PyPy',
  'Topic :: Utilities'
]

license = "MIT"

authors = [
    "Tony Narlock <tony@git-pull.com>"
]

readme = 'README.md'
packages = [
    { include = "django_slugify_processor" }
]
keywords = ["django", "slug", "text"]

homepage = "https://django-slugify-processor.git-pull.com"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/develtech/django-slugify-processor/issues"
Documentation = "https://django-slugify-processor.git-pull.com"
Repository = "https://github.com/develtech/django-slugify-processor"

[tool.poetry.dependencies]
python = "^3.6"
django-extensions = {version="*", optional = true}
Django = ">=2.2"

[tool.poetry.dev-dependencies]
### Docs ###
sphinx = "*"
alagitpull = "^0.1.0"
sphinx-issues = "^1.2.0"
sphinx-autodoc-typehints = "^1.12.0"
myst_parser = "^0.15.0"

### Testing ###
pytest = "*"
pytest-rerunfailures = "*"
pytest-django = "*"
django-extensions = "*"

### Coverage ###
codecov = "*"
coverage = "*"
pytest-cov = "*"

### Format ###
black = {version="==21.8b0", python="^3.6.2"}
isort = "*"

### Lint ###
flake8 = "*"

[tool.poetry.extras]
docs = ["sphinx", "myst_parser", "sphinx-issues", "alagitpull", "sphinx-autodoc-typehints"]
test = ["pytest", "pytest-rerunfailures", "pytest-django", "django-extensions"]
coverage = ["codecov", "coverage", "pytest-cov"]
format = ["black", "isort"]
lint = ["flake8"]

[tool.black]
skip-string-normalization = true
include = '\.pyi?$'
