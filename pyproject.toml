[project]
name = "django-slugify-processor"
version = "1.8.0"
description = "pipeline for slugification edgecases in django"
requires-python = ">=3.8,<4.0"
license = { text = "MIT" }
authors = [
  {name = "Tony Narlock", email = "tony@git-pull.com"}
]
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Environment :: Web Environment',
  'Framework :: Django',
  'Framework :: Django :: 4.2',
  'Framework :: Django :: 5.0',
  'Framework :: Django :: 5.1',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Operating System :: OS Independent',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python :: Implementation :: PyPy',
  'Topic :: Utilities',
  "Typing :: Typed",
]
readme = 'README.md'
packages = [
  { include = "*", from = "src" },
]
include = [
  { path = "tests", format = "sdist" },
]
keywords = ["django", "slug", "text"]
homepage = "https://django-slugify-processor.git-pull.com"
dependencies = [
  "django>=4.2"
]

[project.urls]
"Bug Tracker" = "https://github.com/tony/django-slugify-processor/issues"
Documentation = "https://django-slugify-processor.git-pull.com"
Repository = "https://github.com/tony/django-slugify-processor"
Changes = "https://github.com/tony/django-slugify-processor/blob/master/CHANGES"

[project.optional-dependencies]
django-extensions = [
  "django-extensions"
]

[tool.uv]
dev-dependencies = [
  # Docs
  "sphinx",
  "furo",
  "gp-libs",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-inline-tabs",
  "sphinxext-opengraph",
  "sphinx-copybutton",
  "sphinxext-rediraffe",
  "myst-parser",
  "linkify-it-py",
  # Testing
  "gp-libs",
  "pytest",
  "pytest-rerunfailures",
  "pytest-mock",
  "pytest-watcher",
  "pytest-django",
  "django-extensions",
  # Coverage
  "codecov",
  "coverage",
  "pytest-cov",
  # Lint
  "ruff",
  "mypy",
  "django-stubs",
]

[dependency-groups]
docs = [
  "sphinx",
  "furo",
  "gp-libs",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-inline-tabs",
  "sphinxext-opengraph",
  "sphinx-copybutton",
  "sphinxext-rediraffe",
  "myst-parser",
  "linkify-it-py",
]
testing = [
  "gp-libs",
  "pytest",
  "pytest-rerunfailures",
  "pytest-mock",
  "pytest-watcher",
  "pytest-django",
  "django-extensions",
]
coverage =[
  "codecov",
  "coverage",
  "pytest-cov",
]
lint = [
  "ruff",
  "mypy",
  "django-stubs",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
strict = true
files = [
  "src/",
  "tests/",
]

[tool.django-stubs]
django_settings_module = "tests.settings"

[[tool.mypy.overrides]]
module = [
  "django_extensions.*",
]
ignore_missing_imports = true

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "*/_compat.py",
  "docs/conf.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise NotImplementedError",
  "return NotImplemented",
  "def parse_args",
  "if TYPE_CHECKING:",
  "if t.TYPE_CHECKING:",
  "@overload( |$)",
]

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "A", # flake8-builtins
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "COM", # flake8-commas
  "EM", # flake8-errmsg
  "Q", # flake8-quotes
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
  "TRY", # Trycertatops
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "D", # pydocstyle
]
ignore = [
  "COM812", # missing trailing comma, ruff format conflict
]

[tool.ruff.lint.isort]
known-first-party = [
  "django_slugify_processor",
]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--tb=short --no-header --showlocals --doctest-modules"
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
testpaths = [
  "src/django_slugify_processor",
  "tests",
  "docs",
]
pythonpath = ". tests"
filterwarnings = [
  "ignore:The frontend.Option(Parser)? class.*:DeprecationWarning::",
]

# pytest-django
django_find_project = false
DJANGO_SETTINGS_MODULE = "tests.settings"
